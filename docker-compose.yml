version: "3"

networks:
  lubso:
    driver: bridge

services:
  app:
    image: cosmtrek/air
    networks:
      - lubso
    working_dir: "/usr/src/app"
    ports:
      - 8001:9000
    environment:
      KAFKA_BROKER_ADDRS: "kafka:9092"
      PPROF_ENDPOINTS: "true"
    volumes:
      - "./stat_consumer/:/usr/src/app"

  # stat_processor:

  #   build:

  #     context: "./stat_processor"

  #     dockerfile: "./docker/Dockerfile.dev"

  #   volumes:

  #     - "./stat_processor:/usr/src/app"


  kafka:
    networks:
      - lubso
    image: "bitnami/kafka:latest"
    ports:
      - "9093:9093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=DOCKA://:9092,LOCALHOST://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=DOCKA://kafka:9092,LOCALHOST://127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=DOCKA:PLAINTEXT,LOCALHOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LOCALHOST
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    networks:
      - lubso
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  grafana:
    image: grafana/grafana:5.1.0
    volumes:
      - "./grafana/provisioning:/etc/grafana/provisioning:ro"
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    networks:
      - lubso
    ports:
      - 8002:3000

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - "./prometheus.yml/:/etc/prometheus/prometheus.yml"
      - "prometheusVol:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 8003:9090
    networks:
      - lubso
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - redis

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

volumes:
  prometheusVol: {}
